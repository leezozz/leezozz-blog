(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{400:function(t,e,s){t.exports=s.p+"assets/img/osi-center.00253851.png"},520:function(t,e,s){"use strict";s.r(e);var o=s(2),c=Object(o.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[e("strong",[t._v("网络基层模型")]),t._v(" "),e("img",{attrs:{src:s(400),alt:"osi-center.png"}})]),t._v(" "),e("h2",{attrs:{id:"scoket"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#scoket"}},[t._v("#")]),t._v(" scoket")]),t._v(" "),e("p",[t._v("Socket是TCP/IP网络的API（位于第四层附近），是为了方便使用TCP或UDP而抽象出来的一层，是位于应用层和传输控制层之间的一组接口")]),t._v(" "),e("h2",{attrs:{id:"websocket"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#websocket"}},[t._v("#")]),t._v(" WebSocket")]),t._v(" "),e("p",[t._v("WebSocket则是一个典型的应用层协议（位于第七层）。WebSocket同HTTP一样也是应用层的协议，但是它是一种双向通信协议，是建立在TCP之上的。一开始的握手需要借助HTTP请求完成。")]),t._v(" "),e("h3",{attrs:{id:"websocket与socket的关系"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#websocket与socket的关系"}},[t._v("#")]),t._v(" WebSocket与Socket的关系")]),t._v(" "),e("p",[t._v("Socket其实并不是一个协议，而是为了方便使用TCP或UDP而抽象出来的一层，是位于应用层和传输控制层之间的一组接口")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"title"}),e("p",[t._v("Socket是应用层与TCP/IP协议族通信的中间软件抽象层，它是一组接口。在设计模式中，Socket其实就是一个门面模式，它把复杂的TCP/IP协议族隐藏在Socket接口后面，对用户来说，一组简单的接口就是全部，让Socket去组织数据，以符合指定的协议。")])]),e("p",[e("strong",[t._v("Socket是传输控制层接口，WebSocket是应用层协议")])]),t._v(" "),e("h3",{attrs:{id:"websocket目的"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#websocket目的"}},[t._v("#")]),t._v(" WebSocket目的：")]),t._v(" "),e("p",[t._v("即时通讯、代替轮询")])])}),[],!1,null,null,null);e.default=c.exports}}]);