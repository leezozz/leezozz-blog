(window.webpackJsonp=window.webpackJsonp||[]).push([[101],{510:function(t,r,s){"use strict";s.r(r);var o=s(2),a=Object(o.a)({},(function(){var t=this,r=t._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"fork"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#fork"}},[t._v("#")]),t._v(" fork")]),t._v(" "),r("p",[t._v("在github中快速复制别人的仓库，并实现pr "),r("br"),t._v("\nfork能实现：快速创建一个仓库副本 + 通过pr合并到原始仓库")]),t._v(" "),r("h3",{attrs:{id:"概念"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[t._v("#")]),t._v(" 概念：")]),t._v(" "),r("ul",[r("li",[t._v("fork不是一个git操作，而是github操作，是服务端的代码仓库克隆")]),t._v(" "),r("li",[t._v("fork后会在自己的github账户创建一个新仓库，它包含了原来的仓库（即upstream repository，上游仓库）所有内容，如分支、提交历史等")]),t._v(" "),r("li",[t._v("你可以对fork出的仓库自由提交，并通过PR（Pull Request）贡献回原仓库")]),t._v(" "),r("li",[t._v("由于fork出的新仓库是基于原仓库，但二者在后续开发中可能会大相径庭，所以被称为”分叉“")])])])}),[],!1,null,null,null);r.default=a.exports}}]);