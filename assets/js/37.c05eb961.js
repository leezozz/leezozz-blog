(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{439:function(t,v,_){"use strict";_.r(v);var T=_(2),r=Object(T.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h3",{attrs:{id:"http简述-出自mdn"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http简述-出自mdn"}},[t._v("#")]),t._v(" HTTP简述（出自MDN）")]),t._v(" "),v("p",[t._v("超文本传输协议（HTTP）是用于传输诸如HTML的超媒体文档的应用层协议。它被设计用于Web浏览器和Web服务器之间的通信，但它也可以用于其他目的。 HTTP遵循经典的客户端-服务端模型，客户端打开一个连接以发出请求，然后等待它收到服务器端响应。 HTTP是无状态协议，意味着服务器不会在两个请求之间保留任何数据（状态）。虽然通常基于TCP / IP层，但可以在任何可靠的传输层上使用。")]),t._v(" "),v("h3",{attrs:{id:"https"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#https"}},[t._v("#")]),t._v(" HTTPS")]),t._v(" "),v("p",[t._v("HTTPS（全称：Hyper Text Transfer Protocol over Secure Socket Layer），是以安全为目标的HTTP通道，简单来说就是是HTTP的安全版本，即在HTTP下加入SSL层，HTTPS的安全基石是SSL，因此加密的详细内容就需要SSL。 它现在已经被广泛应用，比如GitHub，支付宝，掘金等。")]),t._v(" "),v("h4",{attrs:{id:"为什么需要nttps"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#为什么需要nttps"}},[t._v("#")]),t._v(" 为什么需要NTTPS")]),t._v(" "),v("p",[t._v("HTTP的几个缺点：")]),t._v(" "),v("ul",[v("li",[t._v("传输的时候使用明文，这显然会被不法者截取干一些见不得人的勾当。")]),t._v(" "),v("li",[t._v("没有认证机制，这样我们就可以伪造一些HTTP访问，这显然会造成一些困扰。比如Jmeter就是典型的例子，伪造一大堆的HTTP URL然后压力测试，这也就是DOS攻击的一种。")]),t._v(" "),v("li",[t._v("无法验证报文的完整性，比如一个HTTP的报文已经被不法者截取并且篡改，而服务器端却无法验证。")])]),t._v(" "),v("h4",{attrs:{id:"http与https的区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http与https的区别"}},[t._v("#")]),t._v(" HTTP与HTTPS的区别")]),t._v(" "),v("ul",[v("li",[t._v("HTTP是明文传输，HTTPS通过SSL\\TLS进行了加密")]),t._v(" "),v("li",[t._v("HTTP的端口号是80，HTTPS是443")]),t._v(" "),v("li",[t._v("HTTPS需要到CA申请证书，一般免费证书很少，需要交费")]),t._v(" "),v("li",[t._v("HTTP的连接很简单，是无状态的。而HTTPS协议是SSL+HTTP；协议构建的可以进行加密传输、身份认证的网络协议，比HTTP协议安全")])]),t._v(" "),v("h4",{attrs:{id:"https的缺陷"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#https的缺陷"}},[t._v("#")]),t._v(" HTTPS的缺陷")]),t._v(" "),v("ul",[v("li",[t._v("通信的速度变慢，由于需要加密，一个握手就多了好几个往返；")]),t._v(" "),v("li",[t._v("对用户的机器负载的增加")])]),t._v(" "),v("h4",{attrs:{id:"https握手过程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#https握手过程"}},[t._v("#")]),t._v(" HTTPS握手过程")]),t._v(" "),v("ol",[v("li",[t._v("客户端使用http的url访问web服务器，要求与服务器建立ssl连接")]),t._v(" "),v("li",[t._v("web服务器收到客户端请求后，会将网站的证书（包含公钥）传送一份给客户端")]),t._v(" "),v("li",[t._v("客户端收到网站证书后会检查证书的颁发机构以及过期时间，如果没有问题就随机产生一个秘钥")]),t._v(" "),v("li",[t._v("客户端利用公钥将会话秘钥加密，并传送给服务器，服务端利用自己的私钥解密出会话秘钥")]),t._v(" "),v("li",[t._v("之后服务器与客户端使用秘钥加密传输")])]),t._v(" "),v("h4",{attrs:{id:"http协议"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http协议"}},[t._v("#")]),t._v(" HTTP协议")]),t._v(" "),v("ol",[v("li",[t._v("最初是浏览器与服务器之间的通讯协议，GET用于读取资源，POST用于提交表单")]),t._v(" "),v("li",[t._v("后来被扩充到接口格式的定义，GET和POST作为接口的请求方式"),v("br")])]),t._v(" "),v("p",[t._v("HTTP协议并没有限制GET请求上限（只是GET请求约定俗成把参数放在url的query中，url的长度有限）"),v("br")]),t._v(" "),v("ol",[v("li",[t._v("浏览器限制：IE2048个字符，Chrome 2M，不同浏览器有不同的限制")]),t._v(" "),v("li",[t._v("服务端限制：有不同程度的限制，目的是解决性能损耗的问题"),v("br")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"title"}),v("p",[t._v("为什么做这样的限制呢？\n是因为服务端解析一个字符串时，需要分配内存，而url必须作为一个整体去看待，没有办法分块处理。于是，必须预先分配一块足够大的内存来存储url，如果url太长或者并发量高的话，就很容易挤爆服务器的内存。为了解决这个问题，所以各端对url的长度做了不同程度的限制。这也就是GET请求有上限的原因")])]),v("p",[t._v("POST并没有比GET更安全"),v("br")]),t._v(" "),v("ol",[v("li",[t._v("都是明文，只是一个参数存query，一个参数存body而已")]),t._v(" "),v("li",[t._v("GET/POST只是请求方式，谈不上安全")]),t._v(" "),v("li",[t._v("真正的安全，只有双端加密，网络节点只能截取包，不能截取内容。如：https"),v("br")])]),t._v(" "),v("p",[t._v("RESTFul-API"),v("br"),t._v("\n表示性状态转义接口（即：API设计规范）"),v("br")]),t._v(" "),v("ol",[v("li",[t._v("将一切数据试做资源")]),t._v(" "),v("li",[t._v("利用HTTP请求方式，描述对资源的操作（增、上、改、查）")]),t._v(" "),v("li",[t._v("通过HTTP相应状态码，描述对资源的操作结果（如：200/5xx）"),v("br")])]),t._v(" "),v("p",[t._v("Method规范：用于描述操作（动词）")]),t._v(" "),v("ol",[v("li",[t._v("GET用于读取资源")]),t._v(" "),v("li",[t._v("POST用于创建资源")]),t._v(" "),v("li",[t._v("PUT用于更新资源（客户端提供更新后的完整资源）")]),t._v(" "),v("li",[t._v("Patch用于局部更新（客户端提供资源局部变量）")]),t._v(" "),v("li",[t._v("DELETE用于删除资源")])])])}),[],!1,null,null,null);v.default=r.exports}}]);