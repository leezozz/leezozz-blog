(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{445:function(t,n,r){"use strict";r.r(n);var s=r(2),o=Object(s.a)({},(function(){var t=this,n=t._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"函数式编程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数式编程"}},[t._v("#")]),t._v(" 函数式编程")]),t._v(" "),n("p",[n("strong",[t._v("函数式编程")]),t._v("（functional programming，FP）是编程范式之一：常说的编程方式还有面向过程编程、面向对象编程")]),t._v(" "),n("p",[n("strong",[t._v("面向过程编程")]),t._v("：按照步骤一步一步实现功能")]),t._v(" "),n("p",[n("strong",[t._v("面向对象编程")]),t._v("：把现实中的事物抽象成程序中的类、对象，通过封装、继承、多态来演示事物之间的联系\n函数式编程的思维方式："),n("em",[n("strong",[t._v("对运算过程进行抽象")])]),t._v("。函数并不是代码中的函数（方法），指的是数学中的函数即映射关系。例如y=sin(x), x和y的关系。总结：函数式编程用来描述函数之间的映射。")]),t._v(" "),n("p",[n("strong",[t._v("声明式")]),t._v("： 我们通过编写一条又一条指令去让计算机执行一些动作，这其中一般都会涉及到很多繁杂的细节。命令式代码中频繁使用语句,来完成某个行为。比如 for、if、switch、throw 等这些语句。")]),t._v(" "),n("p",[n("strong",[t._v("命令式")]),t._v("： 我们通过写表达式的方式来声明我们想干什么，而不是通过一步一步的指示。表达式通常是某些函数调用的复合、一些值和操作符，用来计算出结果值。")])])}),[],!1,null,null,null);n.default=o.exports}}]);